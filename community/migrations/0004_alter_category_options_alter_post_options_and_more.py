# Generated by Django 4.2.20 on 2025-05-07 16:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('community', '0003_rename_fake_name_post_fake_author_post_created_by'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='category',
            options={'verbose_name': '分类', 'verbose_name_plural': '分类'},
        ),
        migrations.AlterModelOptions(
            name='post',
            options={'ordering': ['-is_pinned', '-created_at'], 'verbose_name': '帖子', 'verbose_name_plural': '帖子'},
        ),
        migrations.AlterModelOptions(
            name='tag',
            options={'verbose_name': '标签', 'verbose_name_plural': '标签'},
        ),
        migrations.AlterField(
            model_name='category',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='创建时间'),
        ),
        migrations.AlterField(
            model_name='category',
            name='description',
            field=models.TextField(blank=True, verbose_name='描述'),
        ),
        migrations.AlterField(
            model_name='category',
            name='name',
            field=models.CharField(max_length=20, unique=True, verbose_name='类名'),
        ),
        migrations.AlterField(
            model_name='category',
            name='parent_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='community.category', verbose_name='父类别id'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='content',
            field=models.TextField(verbose_name='内容'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='创建时间'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='edited_content',
            field=models.TextField(blank=True, null=True, verbose_name='编辑内容'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='is_able',
            field=models.BooleanField(default=True, verbose_name='是否禁用'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='is_create_approved',
            field=models.BooleanField(default=False, verbose_name='创建回复是否通过'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='is_edit_approved',
            field=models.BooleanField(default=True, verbose_name='编辑回复是否通过'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='last_edited_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='最后编辑时间'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='parent_comment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='community.comment', verbose_name='父回复'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='community.post', verbose_name='帖子'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='visibility',
            field=models.CharField(choices=[('private', '仅作者和管理员'), ('public', '公开')], default='private', max_length=10, verbose_name='可视度'),
        ),
        migrations.AlterField(
            model_name='post',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
        migrations.AlterField(
            model_name='post',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to='community.category', verbose_name='分类'),
        ),
        migrations.AlterField(
            model_name='post',
            name='content',
            field=models.TextField(blank=True, default='', verbose_name='内容'),
        ),
        migrations.AlterField(
            model_name='post',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='创建时间'),
        ),
        migrations.AlterField(
            model_name='post',
            name='created_by',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_posts', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AlterField(
            model_name='post',
            name='edited_content',
            field=models.TextField(blank=True, null=True, verbose_name='编辑内容'),
        ),
        migrations.AlterField(
            model_name='post',
            name='edited_title',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='编辑标题'),
        ),
        migrations.AlterField(
            model_name='post',
            name='fake_author',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='伪作者'),
        ),
        migrations.AlterField(
            model_name='post',
            name='is_able',
            field=models.BooleanField(default=True, verbose_name='是否禁用'),
        ),
        migrations.AlterField(
            model_name='post',
            name='is_create_approved',
            field=models.BooleanField(default=False, verbose_name='创建帖子审核是否通过'),
        ),
        migrations.AlterField(
            model_name='post',
            name='is_edit_approved',
            field=models.BooleanField(default=True, verbose_name='编辑帖子审核是否通过'),
        ),
        migrations.AlterField(
            model_name='post',
            name='is_pinned',
            field=models.BooleanField(default=False, verbose_name='是否置顶'),
        ),
        migrations.AlterField(
            model_name='post',
            name='last_edited_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='最后更新时间'),
        ),
        migrations.AlterField(
            model_name='post',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='posts', to='community.tag', verbose_name='标签'),
        ),
        migrations.AlterField(
            model_name='post',
            name='title',
            field=models.CharField(max_length=100, verbose_name='标题'),
        ),
        migrations.AlterField(
            model_name='post',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='更新时间'),
        ),
        migrations.AlterField(
            model_name='post',
            name='view_count',
            field=models.PositiveIntegerField(default=0, verbose_name='浏览量'),
        ),
        migrations.AlterField(
            model_name='post',
            name='visibility',
            field=models.CharField(choices=[('private', '仅作者和管理员'), ('public', '公开')], default='private', max_length=10, verbose_name='可视    度'),
        ),
        migrations.AlterField(
            model_name='postattachment',
            name='file',
            field=models.FileField(upload_to='post_attachments', verbose_name='文件'),
        ),
        migrations.AlterField(
            model_name='postattachment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='community.post', verbose_name='帖子'),
        ),
        migrations.AlterField(
            model_name='postattachment',
            name='upload_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='上传时间'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='创建时间'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='name',
            field=models.CharField(max_length=50, unique=True, verbose_name='标签名'),
        ),
    ]
